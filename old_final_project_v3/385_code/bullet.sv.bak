module bullet(  
                input [9:0] bullet_X, bullet_Y, //this is for the ball location - the ball_size
                input bullet_hit,               //if bullet hit something then it disappear
                
                input Reset,                    //reset the bullets
                input frame_clk,                //clk to control the bullet

                input [7:0] space_key,          //space key is hit

                output bullet_active,           //the bullet is still active
                output [9:0] bullet_X_out, bullet_Y_out, bullet_size

            );
    parameter [9:0] bullet_X_Min=3;       // Leftmost point on the X axis
    parameter [9:0] bullet_Y_Min= 15;       // Topmost point on the Y axis
    parameter [9:0] bullet_S = 1;      // bullet size
    parameter int bullet_speed = -1;

    logic [9:0] bullet_x_pos, bullet_y_pos, x_motion, y_motion;
    logic shoot;
    
    always_comb
    begin
        bullet_X_out = bullet_x_pos;
        bullet_Y_out = bullet_y_pos;
        bullet_size  = bullet_S;
    end

    

    always_ff @ (posedge frame_clk)
    begin
        if(Reset)
        begin
            bullet_x_pos <= bullet_X;
            bullet_y_pos <= bullet_Y;
            x_motion <= 10'd0;
            y_motion <= 10'd0;
        end
        else
        begin

            //if the space key is press
            if(space_key == 8'h2c)
            begin
                shoot <= 1;
                bullet_active <= 1;
                y_motion <= speed;
            end
            

            //if the bullet hit something
            //or the bullet is out of bounds
            if(bullet_hit || bull_x_pos < (bullet_X_Min + bullet_speed))
            begin
                shoot <= 0;
                bullet_active <= 0;
                bullet_motion <= 0;
                bullet_x_pos <= bullet_X;
                bullet_y_pos <= bullet_Y;
                y_motion <= 0;
            end

            bullet_y_pos <= bullet_y_pos + y_motion;

        end
        
    end
    


    

endmodule


    // //check if the bullet is out of bounds
    // if(bull_x_pos < (bullet_X_Min + bullet_speed))
    // begin
    //     shoot <= 0;
    //     bullet_active <= 0;
    // end
    // parameter [9:0] Ball_X_Step=1;      // Step size on the X axis
    // parameter [9:0] Ball_Y_Step=1;      // Step size on the Y axis