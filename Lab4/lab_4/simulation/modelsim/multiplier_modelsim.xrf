vendor_name = ModelSim
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/385_lab3_adder_code/lab3.sdc
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/testbench.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/Multiplier.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/Synchronizers.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/Control.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/Reg_8.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/HexDriver.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/multiplier_code/ripple_adder.sv
source_file = 1, C:/Users/ldm18/Desktop/385_FPGA_project/lab_4/db/multiplier.cbx.xml
design_name = Multiplier
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, Multiplier, 1
instance = comp, \Sum[0]~output , Sum[0]~output, Multiplier, 1
instance = comp, \Sum[1]~output , Sum[1]~output, Multiplier, 1
instance = comp, \Sum[2]~output , Sum[2]~output, Multiplier, 1
instance = comp, \Sum[3]~output , Sum[3]~output, Multiplier, 1
instance = comp, \Sum[4]~output , Sum[4]~output, Multiplier, 1
instance = comp, \Sum[5]~output , Sum[5]~output, Multiplier, 1
instance = comp, \Sum[6]~output , Sum[6]~output, Multiplier, 1
instance = comp, \Sum[7]~output , Sum[7]~output, Multiplier, 1
instance = comp, \Sum[8]~output , Sum[8]~output, Multiplier, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Multiplier, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Multiplier, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Multiplier, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Multiplier, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Multiplier, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Multiplier, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Multiplier, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Multiplier, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Multiplier, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Multiplier, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Multiplier, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Multiplier, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Multiplier, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Multiplier, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Multiplier, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Multiplier, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, Multiplier, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, Multiplier, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, Multiplier, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, Multiplier, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, Multiplier, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, Multiplier, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, Multiplier, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, Multiplier, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, Multiplier, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, Multiplier, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, Multiplier, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, Multiplier, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, Multiplier, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, Multiplier, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, Multiplier, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, Multiplier, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, Multiplier, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, Multiplier, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, Multiplier, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, Multiplier, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, Multiplier, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, Multiplier, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, Multiplier, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, Multiplier, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, Multiplier, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, Multiplier, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, Multiplier, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, Multiplier, 1
instance = comp, \Clk~input , Clk~input, Multiplier, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, Multiplier, 1
instance = comp, \Reset~input , Reset~input, Multiplier, 1
instance = comp, \SW[4]~input , SW[4]~input, Multiplier, 1
instance = comp, \SW_sync[4]|q , SW_sync[4]|q, Multiplier, 1
instance = comp, \ClearA_LoadB~input , ClearA_LoadB~input, Multiplier, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, Multiplier, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, Multiplier, 1
instance = comp, \SW[5]~input , SW[5]~input, Multiplier, 1
instance = comp, \SW_sync[5]|q , SW_sync[5]|q, Multiplier, 1
instance = comp, \SW[7]~input , SW[7]~input, Multiplier, 1
instance = comp, \SW_sync[7]|q , SW_sync[7]|q, Multiplier, 1
instance = comp, \SW[1]~input , SW[1]~input, Multiplier, 1
instance = comp, \SW_sync[1]|q~feeder , SW_sync[1]|q~feeder, Multiplier, 1
instance = comp, \SW_sync[1]|q , SW_sync[1]|q, Multiplier, 1
instance = comp, \Run~input , Run~input, Multiplier, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, Multiplier, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, Multiplier, 1
instance = comp, \control_unit|curr_state~43 , control_unit|curr_state~43, Multiplier, 1
instance = comp, \control_unit|curr_state.s7 , control_unit|curr_state.s7, Multiplier, 1
instance = comp, \control_unit|Selector1~0 , control_unit|Selector1~0, Multiplier, 1
instance = comp, \control_unit|curr_state.hold , control_unit|curr_state.hold, Multiplier, 1
instance = comp, \control_unit|curr_state.start~0 , control_unit|curr_state.start~0, Multiplier, 1
instance = comp, \control_unit|curr_state.start , control_unit|curr_state.start, Multiplier, 1
instance = comp, \control_unit|curr_state~44 , control_unit|curr_state~44, Multiplier, 1
instance = comp, \control_unit|curr_state.pause , control_unit|curr_state.pause, Multiplier, 1
instance = comp, \control_unit|curr_state~29 , control_unit|curr_state~29, Multiplier, 1
instance = comp, \control_unit|curr_state.cont , control_unit|curr_state.cont, Multiplier, 1
instance = comp, \control_unit|Selector2~0 , control_unit|Selector2~0, Multiplier, 1
instance = comp, \control_unit|curr_state.a0 , control_unit|curr_state.a0, Multiplier, 1
instance = comp, \control_unit|curr_state~36 , control_unit|curr_state~36, Multiplier, 1
instance = comp, \control_unit|curr_state.s0 , control_unit|curr_state.s0, Multiplier, 1
instance = comp, \control_unit|curr_state~30 , control_unit|curr_state~30, Multiplier, 1
instance = comp, \control_unit|curr_state.a1 , control_unit|curr_state.a1, Multiplier, 1
instance = comp, \control_unit|curr_state~37 , control_unit|curr_state~37, Multiplier, 1
instance = comp, \control_unit|curr_state.s1 , control_unit|curr_state.s1, Multiplier, 1
instance = comp, \control_unit|curr_state~31 , control_unit|curr_state~31, Multiplier, 1
instance = comp, \control_unit|curr_state.a2 , control_unit|curr_state.a2, Multiplier, 1
instance = comp, \control_unit|curr_state~38 , control_unit|curr_state~38, Multiplier, 1
instance = comp, \control_unit|curr_state.s2 , control_unit|curr_state.s2, Multiplier, 1
instance = comp, \control_unit|curr_state~32 , control_unit|curr_state~32, Multiplier, 1
instance = comp, \control_unit|curr_state.a3 , control_unit|curr_state.a3, Multiplier, 1
instance = comp, \control_unit|curr_state~39 , control_unit|curr_state~39, Multiplier, 1
instance = comp, \control_unit|curr_state.s3 , control_unit|curr_state.s3, Multiplier, 1
instance = comp, \control_unit|curr_state~33 , control_unit|curr_state~33, Multiplier, 1
instance = comp, \control_unit|curr_state.a4 , control_unit|curr_state.a4, Multiplier, 1
instance = comp, \control_unit|curr_state~40 , control_unit|curr_state~40, Multiplier, 1
instance = comp, \control_unit|curr_state.s4 , control_unit|curr_state.s4, Multiplier, 1
instance = comp, \control_unit|curr_state~34 , control_unit|curr_state~34, Multiplier, 1
instance = comp, \control_unit|curr_state.a5 , control_unit|curr_state.a5, Multiplier, 1
instance = comp, \control_unit|curr_state~41 , control_unit|curr_state~41, Multiplier, 1
instance = comp, \control_unit|curr_state.s5 , control_unit|curr_state.s5, Multiplier, 1
instance = comp, \control_unit|curr_state~35 , control_unit|curr_state~35, Multiplier, 1
instance = comp, \control_unit|curr_state.a6 , control_unit|curr_state.a6, Multiplier, 1
instance = comp, \control_unit|curr_state~42 , control_unit|curr_state~42, Multiplier, 1
instance = comp, \control_unit|curr_state.s6 , control_unit|curr_state.s6, Multiplier, 1
instance = comp, \control_unit|curr_state~28 , control_unit|curr_state~28, Multiplier, 1
instance = comp, \control_unit|curr_state.minus , control_unit|curr_state.minus, Multiplier, 1
instance = comp, \adder1|add_val~0 , adder1|add_val~0, Multiplier, 1
instance = comp, \SW[0]~input , SW[0]~input, Multiplier, 1
instance = comp, \SW_sync[0]|q~feeder , SW_sync[0]|q~feeder, Multiplier, 1
instance = comp, \SW_sync[0]|q , SW_sync[0]|q, Multiplier, 1
instance = comp, \adder1|cra0|AS0|c_out~0 , adder1|cra0|AS0|c_out~0, Multiplier, 1
instance = comp, \adder1|cra0|AS1|s , adder1|cra0|AS1|s, Multiplier, 1
instance = comp, \control_unit|WideOr18~0 , control_unit|WideOr18~0, Multiplier, 1
instance = comp, \control_unit|WideOr18~1 , control_unit|WideOr18~1, Multiplier, 1
instance = comp, \control_unit|WideOr18 , control_unit|WideOr18, Multiplier, 1
instance = comp, \adder1|add_val~3 , adder1|add_val~3, Multiplier, 1
instance = comp, \SW[3]~input , SW[3]~input, Multiplier, 1
instance = comp, \SW_sync[3]|q , SW_sync[3]|q, Multiplier, 1
instance = comp, \adder1|add_val~2 , adder1|add_val~2, Multiplier, 1
instance = comp, \SW[2]~input , SW[2]~input, Multiplier, 1
instance = comp, \SW_sync[2]|q , SW_sync[2]|q, Multiplier, 1
instance = comp, \adder1|add_val~1 , adder1|add_val~1, Multiplier, 1
instance = comp, \adder1|cra0|AS1|c_out~0 , adder1|cra0|AS1|c_out~0, Multiplier, 1
instance = comp, \adder1|cra0|AS2|c_out~0 , adder1|cra0|AS2|c_out~0, Multiplier, 1
instance = comp, \adder1|cra0|AS3|c_out~0 , adder1|cra0|AS3|c_out~0, Multiplier, 1
instance = comp, \adder1|cra1|AS0|s , adder1|cra1|AS0|s, Multiplier, 1
instance = comp, \adder1|add_val~4 , adder1|add_val~4, Multiplier, 1
instance = comp, \adder1|cra1|AS0|c_out~0 , adder1|cra1|AS0|c_out~0, Multiplier, 1
instance = comp, \adder1|cra1|AS1|c_out~0 , adder1|cra1|AS1|c_out~0, Multiplier, 1
instance = comp, \SW[6]~input , SW[6]~input, Multiplier, 1
instance = comp, \SW_sync[6]|q , SW_sync[6]|q, Multiplier, 1
instance = comp, \adder1|add_val~5 , adder1|add_val~5, Multiplier, 1
instance = comp, \adder1|cra1|AS2|s , adder1|cra1|AS2|s, Multiplier, 1
instance = comp, \adder1|cra1|AS2|c_out~0 , adder1|cra1|AS2|c_out~0, Multiplier, 1
instance = comp, \adder1|add_val~6 , adder1|add_val~6, Multiplier, 1
instance = comp, \adder1|cra1|AS3|s , adder1|cra1|AS3|s, Multiplier, 1
instance = comp, \adder1|cra2|s , adder1|cra2|s, Multiplier, 1
instance = comp, \X_bit|Data_Out~0 , X_bit|Data_Out~0, Multiplier, 1
instance = comp, \X_bit|Data_Out , X_bit|Data_Out, Multiplier, 1
instance = comp, \reg_A|Data_Out~8 , reg_A|Data_Out~8, Multiplier, 1
instance = comp, \control_unit|WideOr19~1 , control_unit|WideOr19~1, Multiplier, 1
instance = comp, \control_unit|WideOr19~0 , control_unit|WideOr19~0, Multiplier, 1
instance = comp, \reg_A|Data_Out[4]~1 , reg_A|Data_Out[4]~1, Multiplier, 1
instance = comp, \reg_A|Data_Out[7] , reg_A|Data_Out[7], Multiplier, 1
instance = comp, \reg_A|Data_Out~7 , reg_A|Data_Out~7, Multiplier, 1
instance = comp, \reg_A|Data_Out[6] , reg_A|Data_Out[6], Multiplier, 1
instance = comp, \adder1|cra1|AS1|s , adder1|cra1|AS1|s, Multiplier, 1
instance = comp, \reg_A|Data_Out~6 , reg_A|Data_Out~6, Multiplier, 1
instance = comp, \reg_A|Data_Out[5] , reg_A|Data_Out[5], Multiplier, 1
instance = comp, \reg_A|Data_Out~5 , reg_A|Data_Out~5, Multiplier, 1
instance = comp, \reg_A|Data_Out[4] , reg_A|Data_Out[4], Multiplier, 1
instance = comp, \adder1|cra0|AS3|s , adder1|cra0|AS3|s, Multiplier, 1
instance = comp, \reg_A|Data_Out~4 , reg_A|Data_Out~4, Multiplier, 1
instance = comp, \reg_A|Data_Out[3] , reg_A|Data_Out[3], Multiplier, 1
instance = comp, \adder1|cra0|AS2|s , adder1|cra0|AS2|s, Multiplier, 1
instance = comp, \reg_A|Data_Out~3 , reg_A|Data_Out~3, Multiplier, 1
instance = comp, \reg_A|Data_Out[2] , reg_A|Data_Out[2], Multiplier, 1
instance = comp, \reg_A|Data_Out~2 , reg_A|Data_Out~2, Multiplier, 1
instance = comp, \reg_A|Data_Out[1] , reg_A|Data_Out[1], Multiplier, 1
instance = comp, \reg_A|Data_Out[0] , reg_A|Data_Out[0], Multiplier, 1
instance = comp, \reg_B|Data_Out~8 , reg_B|Data_Out~8, Multiplier, 1
instance = comp, \reg_B|Data_Out[3]~1 , reg_B|Data_Out[3]~1, Multiplier, 1
instance = comp, \reg_B|Data_Out[7] , reg_B|Data_Out[7], Multiplier, 1
instance = comp, \reg_B|Data_Out~7 , reg_B|Data_Out~7, Multiplier, 1
instance = comp, \reg_B|Data_Out[6] , reg_B|Data_Out[6], Multiplier, 1
instance = comp, \reg_B|Data_Out~6 , reg_B|Data_Out~6, Multiplier, 1
instance = comp, \reg_B|Data_Out[5] , reg_B|Data_Out[5], Multiplier, 1
instance = comp, \reg_B|Data_Out~5 , reg_B|Data_Out~5, Multiplier, 1
instance = comp, \reg_B|Data_Out[4] , reg_B|Data_Out[4], Multiplier, 1
instance = comp, \reg_B|Data_Out~4 , reg_B|Data_Out~4, Multiplier, 1
instance = comp, \reg_B|Data_Out[3] , reg_B|Data_Out[3], Multiplier, 1
instance = comp, \reg_B|Data_Out~3 , reg_B|Data_Out~3, Multiplier, 1
instance = comp, \reg_B|Data_Out[2] , reg_B|Data_Out[2], Multiplier, 1
instance = comp, \reg_B|Data_Out~2 , reg_B|Data_Out~2, Multiplier, 1
instance = comp, \reg_B|Data_Out[1] , reg_B|Data_Out[1], Multiplier, 1
instance = comp, \reg_B|Data_Out~0 , reg_B|Data_Out~0, Multiplier, 1
instance = comp, \reg_B|Data_Out[0] , reg_B|Data_Out[0], Multiplier, 1
instance = comp, \adder1|cra0|AS0|s~0 , adder1|cra0|AS0|s~0, Multiplier, 1
instance = comp, \reg_A|Data_Out[0]~0 , reg_A|Data_Out[0]~0, Multiplier, 1
instance = comp, \BHex0|WideOr6~0 , BHex0|WideOr6~0, Multiplier, 1
instance = comp, \BHex0|WideOr5~0 , BHex0|WideOr5~0, Multiplier, 1
instance = comp, \BHex0|WideOr4~0 , BHex0|WideOr4~0, Multiplier, 1
instance = comp, \BHex0|WideOr3~0 , BHex0|WideOr3~0, Multiplier, 1
instance = comp, \BHex0|WideOr2~0 , BHex0|WideOr2~0, Multiplier, 1
instance = comp, \BHex0|WideOr1~0 , BHex0|WideOr1~0, Multiplier, 1
instance = comp, \BHex0|WideOr0~0 , BHex0|WideOr0~0, Multiplier, 1
instance = comp, \BHex1|WideOr6~0 , BHex1|WideOr6~0, Multiplier, 1
instance = comp, \BHex1|WideOr5~0 , BHex1|WideOr5~0, Multiplier, 1
instance = comp, \BHex1|WideOr4~0 , BHex1|WideOr4~0, Multiplier, 1
instance = comp, \BHex1|WideOr3~0 , BHex1|WideOr3~0, Multiplier, 1
instance = comp, \BHex1|WideOr2~0 , BHex1|WideOr2~0, Multiplier, 1
instance = comp, \BHex1|WideOr1~0 , BHex1|WideOr1~0, Multiplier, 1
instance = comp, \BHex1|WideOr0~0 , BHex1|WideOr0~0, Multiplier, 1
instance = comp, \AHex0|WideOr6~0 , AHex0|WideOr6~0, Multiplier, 1
instance = comp, \AHex0|WideOr5~0 , AHex0|WideOr5~0, Multiplier, 1
instance = comp, \AHex0|WideOr4~0 , AHex0|WideOr4~0, Multiplier, 1
instance = comp, \AHex0|WideOr3~0 , AHex0|WideOr3~0, Multiplier, 1
instance = comp, \AHex0|WideOr2~0 , AHex0|WideOr2~0, Multiplier, 1
instance = comp, \AHex0|WideOr1~0 , AHex0|WideOr1~0, Multiplier, 1
instance = comp, \AHex0|WideOr0~0 , AHex0|WideOr0~0, Multiplier, 1
instance = comp, \AHex1|WideOr6~0 , AHex1|WideOr6~0, Multiplier, 1
instance = comp, \AHex1|WideOr5~0 , AHex1|WideOr5~0, Multiplier, 1
instance = comp, \AHex1|WideOr4~0 , AHex1|WideOr4~0, Multiplier, 1
instance = comp, \AHex1|WideOr3~0 , AHex1|WideOr3~0, Multiplier, 1
instance = comp, \AHex1|WideOr2~0 , AHex1|WideOr2~0, Multiplier, 1
instance = comp, \AHex1|WideOr1~0 , AHex1|WideOr1~0, Multiplier, 1
instance = comp, \AHex1|WideOr0~0 , AHex1|WideOr0~0, Multiplier, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, Multiplier, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, Multiplier, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, Multiplier, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
